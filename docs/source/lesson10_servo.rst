.. note::

    Bonjour et bienvenue dans la communaut√© SunFounder Raspberry Pi & Arduino & ESP32 sur Facebook ! Plongez au c≈ìur de Raspberry Pi, Arduino et ESP32 avec des passionn√©s partageant les m√™mes int√©r√™ts.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques gr√¢ce √† l'aide de notre communaut√© et de notre √©quipe.
    - **Apprenez & partagez** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux avant-go√ªts.
    - **R√©ductions sp√©ciales** : Profitez de remises exclusives sur nos produits les plus r√©cents.
    - **Promotions festives et concours** : Participez √† des concours et des promotions lors des f√™tes.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !


Le√ßon 10 : Explorer le syst√®me visuel du Rover martien - Servo et m√©canisme d'inclinaison
===========================================================================================

Bienvenue, jeunes explorateurs ! Dans l'aventure d'aujourd'hui, nous allons plonger 
dans le fascinant monde du syst√®me visuel du Rover martien. 
Tout comme nos yeux et notre cou travaillent ensemble pour nous aider √† voir et naviguer, 
notre Rover a besoin d'un syst√®me similaire pour affronter le paysage accident√© de Mars. 
Et c'est exactement ce que nous allons construire aujourd'hui !

Le syst√®me visuel de notre Rover comporte deux parties principales : une cam√©ra qui agit 
comme ses "yeux", et un m√©canisme d'inclinaison qui fonctionne comme son "cou", lui 
permettant de regarder en haut et en bas. √Ä la fin de cette le√ßon, nous donnerons √† notre 
Rover la capacit√© de "voir" et de "hocher la t√™te" !

Tout d'abord, nous allons construire le m√©canisme d'inclinaison - un dispositif qui 
maintiendra la cam√©ra de notre Rover et lui permettra de pivoter verticalement. 
C'est comme donner √† notre Rover un cou, afin qu'il puisse hocher la t√™te vers le haut 
et le bas !

Ensuite, nous apprendrons √† conna√Ætre le servo, ce petit mais puissant "muscle" qui 
actionne notre m√©canisme d'inclinaison. Nous comprendrons comment il fonctionne et 
comment nous pouvons le contr√¥ler en utilisant la programmation Arduino.

Tout comme nos muscles du cou bougent notre t√™te pour que nos yeux aient une meilleure 
vue, le servo d√©placera le m√©canisme d'inclinaison pour que la cam√©ra du Rover puisse 
mieux observer le paysage martien.

Alors, attachez vos ceintures, explorateurs, commen√ßons notre mission pour √©quiper 
notre Rover de son propre syst√®me visuel !

.. raw:: html

    <video width="600" loop autoplay muted>
        <source src="_static/video/servo_range.mp4" type="video/mp4">
        Your browser does not support the video tag.
    </video>


Objectif
----------------

* S'entra√Æner √† installer et √† utiliser le m√©canisme d'inclinaison sur le mod√®le du Rover martien.
* Comprendre les principes de fonctionnement et d'application des servos.
* Apprendre √† contr√¥ler le mouvement des servos √† travers la programmation Arduino.

Mat√©riel
---------------

* Carte de d√©veloppement Arduino UNO
* Servo
* Cardan et cam√©ra
* Mod√®le de Rover martien (d√©j√† √©quip√© de moteur TT, syst√®me de suspension, modules de d√©tection d'obstacles √† ultrasons et infrarouges, bande LED RGB)
* IDE Arduino
* Ordinateur

√âtapes
-----------

**√âtape 1 : Qu'est-ce qu'un Servo ?**

Avez-vous d√©j√† assist√© √† un spectacle de marionnettes ? Si oui, vous avez peut-√™tre admir√© la fa√ßon dont le marionnettiste fait bouger les bras, les jambes et la t√™te des marionnettes en douceur, simplement en tirant sur quelques ficelles. D'une certaine mani√®re, les servos moteurs sont comme nos marionnettistes.

.. image:: img/puppet_show.png
    :width: 200
    :align: center

Les servos moteurs sont un type particulier de moteurs qui ne tournent pas simplement en continu comme une roue. Au lieu de cela, ils peuvent se d√©placer vers une position sp√©cifique et maintenir cette position. Imaginez que vous jouez √† "Jacques a dit", et que Jacques vous dit : "Levez le bras √† un angle de 90 degr√©s !" Vous pouvez le faire, n'est-ce pas ? C'est parce que, tout comme un servo, vous pouvez contr√¥ler exactement combien votre bras bouge.

.. image:: img/servo.png
    :align: center

* Fil marron : GND
* Fil orange : Broche du signal, connect√©e √† la broche PWM de la carte principale.
* Fil rouge : VCC

Tout comme vous pouvez contr√¥ler vos bras pour qu'ils se d√©placent √† des positions sp√©cifiques, nous pouvons utiliser des servos moteurs pour contr√¥ler la position exacte des objets dans nos projets. Dans notre Rover martien, nous utiliserons un servo pour contr√¥ler le mouvement de haut en bas de notre m√©canisme d'inclinaison, tout comme vous pouvez hocher la t√™te de haut en bas.

Dans l'√©tape suivante, nous embarquerons pour un voyage fascinant √† l'int√©rieur d'un servo pour comprendre comment il fonctionne. Excit√©s ? Allons-y !

**√âtape 2 : Comment fonctionne un Servo ?**

Alors, comment un servo fait-il sa magie ? Partons pour un voyage palpitant √† l'int√©rieur d'un servo !

Si nous jetions un coup d'≈ìil √† l'int√©rieur d'un servo, nous verrions quelques pi√®ces. Au c≈ìur d'un servo se trouve un moteur ordinaire, tr√®s similaire aux moteurs qui font tourner les roues de notre Rover martien. Autour du moteur se trouve un grand engrenage connect√© √† un plus petit engrenage sur l'axe du moteur. C'est ainsi que le mouvement rapide et circulaire du moteur est transform√© en un mouvement plus lent mais plus puissant.

.. image:: img/servo_internal.png
    :align: center

Mais ce n'est pas ce qui rend un servo sp√©cial. La magie r√©side dans un petit composant √©lectronique appel√© "potentiom√®tre" et dans le "circuit de contr√¥le". Voici comment cela fonctionne : lorsque le servo se d√©place, le potentiom√®tre tourne et modifie sa r√©sistance. Le circuit de contr√¥le mesure ce changement de r√©sistance et sait exactement dans quelle position se trouve le servo. Astucieux, n'est-ce pas ?

Pour contr√¥ler un servo, nous lui envoyons un signal sp√©cial appel√© "signal de modulation de largeur d'impulsion" ou PWM. En modifiant la largeur de ces impulsions, nous pouvons contr√¥ler exactement la quantit√© de mouvement du servo et le maintenir dans cette position.

Dans l'√©tape suivante, nous allons apprendre √† contr√¥ler un servo en utilisant un Arduino. Pr√™ts pour quelques formules magiques sous forme de code ? Allons-y !

**√âtape 3 : Contr√¥ler un Servo avec Arduino**

Bien, explorateurs, maintenant que nous savons comment fonctionne un servo, apprenons √† le contr√¥ler √† l'aide de notre baguette magique, l'Arduino !

Contr√¥ler un servo revient √† lui donner des instructions. Vous vous souvenez des signaux PWM dont nous avons parl√© plus t√¥t ? Nous allons les utiliser pour indiquer au servo o√π se d√©placer.

Heureusement, Arduino nous simplifie la t√¢che gr√¢ce √† une biblioth√®que int√©gr√©e appel√©e ``Servo``. Avec cette biblioth√®que, nous pouvons cr√©er un objet ``Servo``, attacher une broche (celle √† laquelle notre servo est connect√©), puis utiliser une commande simple, ``write()``, pour d√©finir l'angle.

Voici un extrait du code :

.. code-block:: arduino

    #include <Servo.h> 

    Servo myServo;  // cr√©er un objet servo

    void setup() {
        myServo.attach(6);  // attacher le servo √† la broche 6
    }

    void loop() {
        myServo.write(90);  // dire au servo de se positionner √† 90 degr√©s
    }

Dans ce code, ``myServo`` est notre objet Servo, ``attach(6)`` indique √† l'Arduino que notre servo est connect√© √† la broche 6, et ``write(90)`` indique au servo de se d√©placer √† 90 degr√©s.

Bravo, explorateurs ! Vous venez d'apprendre √† contr√¥ler un servo avec Arduino. Vous pouvez √©galement exp√©rimenter avec diff√©rents angles !

**√âtape 4 : Assembler le syst√®me visuel**

Vous √™tes maintenant pr√™ts √† assembler le syst√®me visuel de notre Rover.

.. note::

    * Lors de l'insertion de l'ESP32 CAM dans l'adaptateur de cam√©ra, faites attention √† son orientation. Il doit √™tre correctement align√© avec l'adaptateur ESP32.

    .. image:: img/esp32_cam_direction.png
        :width: 300
        :align: center
    
.. raw:: html

    <iframe width="600" height="400" src="https://www.youtube.com/embed/h43JVI3xLqE?si=Q7-RvRvZOusK7vPo" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

**√âtape 5 : Comprendre les limites du m√©canisme d'inclinaison**

Bien que le servo soit con√ßu pour tourner entre 0 et 180 degr√©s, vous remarquerez peut-√™tre qu'il cesse de r√©pondre au-del√† d'un certain point (disons apr√®s 150 degr√©s). Vous √™tes-vous d√©j√† demand√© pourquoi cela se produit ? Explorons ce myst√®re ensemble lors de notre prochaine aventure !

Pouvez-vous imaginer un oiseau essayant de plier son cou jusqu'√† ce qu'il touche son propre corps et ne puisse plus bouger ? Le m√©canisme d'inclinaison de notre Rover fait face √† une situation similaire. Lorsque le servo d√©place le m√©canisme vers le bas, il peut heurter le corps du Rover et ne pas pouvoir aller au-del√† d'un certain angle.

Si nous essayons de le forcer √† se d√©placer au-del√† de ce point en √©crivant un angle inaccessible dans notre code, notre petit servo risque de se bloquer et m√™me de se casser ! Nous ne voulons pas que cela arrive, n'est-ce pas ? Alors, comprenons ses limites de mouvement gr√¢ce √† une petite exp√©rience.

Nous utilisons une boucle ``for`` pour faire pivoter le servo de 0 √† 180 degr√©s tout en notant l'angle dans le **Moniteur S√©rie**.

.. raw:: html

    <iframe src=https://create.arduino.cc/editor/sunfounder01/848c7a3a-16b2-4a7e-8d66-bb91848bc6d9/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>

* L'ESP32-CAM et la carte Arduino partagent les m√™mes broches RX (r√©ception) et TX (transmission). Donc, avant de t√©l√©charger le code, vous devez d'abord lib√©rer l'ESP32-CAM en faisant glisser cet interrupteur sur le c√¥t√© droit pour √©viter tout conflit ou probl√®me potentiel.

    .. image:: img/camera_upload.png
        :width: 600

* Apr√®s avoir t√©l√©charg√© le code, ouvrez le **Moniteur S√©rie**. Si aucune information n'appara√Æt, appuyez sur le **bouton de r√©initialisation** du bouclier GalaxyRVR pour relancer le code.

* Vous verrez le servo tourner, et le Moniteur S√©rie affichera l'angle.

.. image:: img/servo_range.png

.. raw:: html

    <video width="600" loop autoplay muted>
        <source src="_static/video/servo_range.mp4" type="video/mp4">
        Your browser does not support the video tag.
    </video>
    
Sur mon Rover, le m√©canisme d'inclinaison pouvait atteindre environ 140¬∞ avant de heurter le corps du Rover et de ne plus pouvoir aller plus loin.

Donc, explorateurs, souvenez-vous toujours de respecter les limites de votre Rover pour le maintenir en s√©curit√© et en bon √©tat de fonctionnement !


**√âtape 6 : Partage et r√©flexion**


Bravo, explorateurs ! Aujourd'hui, vous avez non seulement construit un m√©canisme d'inclinaison pour votre Rover, mais vous avez √©galement compris comment contr√¥ler un servo pour le faire bouger. C'est un grand pas en avant dans notre mission Rover martien.

Maintenant, partageons nos exp√©riences et r√©fl√©chissons √† ce que nous avons appris.

Avez-vous rencontr√© des d√©fis lors de la mise en place du m√©canisme d'inclinaison ou de la programmation du servo ? Comment les avez-vous surmont√©s ?

Souvenez-vous, chaque d√©fi surmont√© nous rend plus intelligents et rend notre Rover encore meilleur. Alors, n'h√©sitez pas √† partager vos histoires, id√©es et solutions. Vous pourriez bien aider un autre explorateur dans son parcours !

