.. note::

    Bonjour et bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez dans l'univers du Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et relevez les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprenez & Partagez** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et √† des aper√ßus exclusifs.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos nouveaux produits.
    - **Promotions festives et concours** : Participez √† des promotions et √† des concours durant les f√™tes.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

FAQ
==============

.. _ap_to_sta:

Q1 : Passer du mode AP au mode STA
-------------------------------------------------

* Vous devez t√©l√©charger le code correspondant.

    * :download:`GalaxyRVR Codes <https://github.com/sunfounder/galaxy-rvr/archive/refs/heads/main.zip>`

* Installez l'IDE, puis les biblioth√®ques ``SoftPWM`` et ``SunFounder AI Camera``. :ref:`install_lib`.

* Ensuite, ouvrez le fichier ``galaxy-rvr.ino`` situ√© dans le r√©pertoire ``galaxy-rvr-main\galaxy-rvr``.

* Commentez les lignes 69-71, d√©commentez les lignes 73-75 et remplacez les ``SSID`` et ``PASSWORD`` par ceux de votre r√©seau WLAN.

.. image:: img/ap_sta.png
    :align: center

* Connectez l'Arduino √† votre ordinateur via un c√¢ble USB, puis basculez l'interrupteur **upload** de la voiture en mode t√©l√©chargement.

.. image:: img/camera_upload.png
    :width: 400
    :align: center

* T√©l√©chargez votre code.

.. _install_lib:

Q2 : Erreur de compilation : SoftPWM.h : Aucun fichier ou r√©pertoire de ce type ?
----------------------------------------------------------------------------------------
Si vous obtenez une erreur de compilation : "SoftPWM.h : Aucun fichier ou r√©pertoire de ce type", cela signifie que vous n'avez pas install√© la biblioth√®que SoftPWM.

Veuillez installer les deux biblioth√®ques requises ``SoftPWM`` et ``SunFounder AI Camera`` comme indiqu√©.

    .. raw:: html

        <video width="600" loop autoplay muted>
            <source src="_static/video/install_softpwm.mp4" type="video/mp4">
            Your browser does not support the video tag.
        </video>

Q3 : avrdude : stk500_getsync() tentative 10 sur 10 : pas en synchronisation : resp=0x6e ?
------------------------------------------------------------------------------------------------
Si ce message appara√Æt apr√®s avoir cliqu√© sur le bouton **Upload** alors que la carte et le port ont √©t√© s√©lectionn√©s correctement.

.. code-block::

    avrdude: stk500_recv(): programmer is not responding
    avrdude: stk500_getsync() attempt 1 of 10: not in sync: resp=0x00
    avrdude: stk500_recv(): programmer is not responding
    avrdude: stk500_getsync() attempt 2 of 10: not in sync: resp=0x00
    avrdude: stk500_recv(): programmer is not responding
    avrdude: stk500_getsync() attempt 3 of 10: not in sync: resp=0x00
    √Ä ce stade, vous devez vous assurer que l'ESP32 CAM est d√©connect√©e.

L'ESP32-CAM et la carte Arduino partagent les m√™mes broches RX (r√©ception) et TX (transmission). Donc, avant de t√©l√©charger le code, vous devez d'abord d√©connecter l'ESP32-CAM pour √©viter tout conflit ou probl√®me potentiel.

    .. image:: img/camera_upload.png
        :width: 500
        :align: center

Une fois le code t√©l√©charg√© avec succ√®s, si vous devez utiliser l'ESP32 CAM, d√©placez l'interrupteur vers la gauche pour d√©marrer l'ESP32 CAM.

    .. image:: img/camera_run.png
        :width: 500
        :align: center

.. _stt_android:

Q4 : Comment utiliser le mode STT sur mon appareil Android ?
------------------------------------------------------------------------

Le mode STT n√©cessite que l'appareil mobile Android soit connect√© √† Internet et que le composant de service Google soit install√©.

Suivez les √©tapes ci-dessous.

#. Modifiez le fichier ``galaxy-rvr.ino`` pour passer du mode AP au mode STA.

    * Ouvrez le fichier ``galaxy-rvr.ino`` situ√© dans le r√©pertoire ``galaxy-rvr-main\galaxy-rvr``.
    * Commentez le code li√© au mode AP. D√©commentez le code du mode STA et renseignez les champs ``SSID`` et ``PASSWORD`` de votre r√©seau Wi-Fi domestique.

        .. code-block:: arduino

            /** Configurer le mode Wifi, SSID, mot de passe*/
            // #define WIFI_MODE WIFI_MODE_AP
            // #define SSID "GalaxyRVR"
            // #define PASSWORD "12345678"

            #define WIFI_MODE WIFI_MODE_STA
            #define SSID "xxxxxxxxxx"
            #define PASSWORD "xxxxxxxxxx"

    * Enregistrez ce code, s√©lectionnez la bonne carte (Arduino Uno) et le bon port, puis cliquez sur le bouton **Upload** pour le t√©l√©verser sur la carte R3.

#. Recherchez ``google`` dans le Google Play Store, trouvez l'application ci-dessous et installez-la.

    .. image:: img/google_voice.png
        :width: 500
        :align: center

#. Connectez votre appareil mobile au m√™me r√©seau Wi-Fi que celui configur√© dans le code.

    .. image:: img/sta_wifi.png
        :width: 500
        :align: center

#. Ouvrez le contr√¥leur pr√©c√©demment cr√©√© dans SunFounder Controller et connectez-le √† ``GalaxyRVR`` via le bouton |app_connect|.

    .. image:: img/app/camera_connect.png
        :width: 400
        :align: center

#. Maintenez enfonc√© le widget **STT(J)** apr√®s avoir cliqu√© sur le bouton |app_run|. Un message s'affichera indiquant qu'il √©coute. Prononcez la commande suivante pour d√©placer la voiture.

    .. image:: img/app/play_speech.png

    * ``stop`` : Arr√™ter tous les mouvements du rover.
    * ``forward`` : Faire avancer le rover.
    * ``backward`` : Faire reculer le rover.
    * ``left`` : Faire tourner le rover √† gauche.
    * ``right`` : Faire tourner le rover √† droite.

Q5 : √Ä propos du firmware ESP32 CAM
---------------------------------------------------

Voici le lien vers le firmware de l'ESP32 CAM : |link_ai_camera_firmware|

Q6 : Comment flasher un nouveau firmware sur une ESP32 CAM ?
-----------------------------------------------------------------
Le module cam√©ra est pr√©flash√© en usine. Cependant, si vous rencontrez un probl√®me de corruption de donn√©es, vous pouvez le reflasher avec un nouveau firmware en utilisant l'IDE Arduino. Voici comment proc√©der :

**1. Pr√©parer le programmeur**

#. Tout d'abord, pr√©parez un programmeur.

#. Ins√©rez l'ESP32 CAM dans le programmeur puis branchez-le √† votre ordinateur.

**2. Installer la carte ESP32**

Pour programmer le microcontr√¥leur ESP32, vous devez installer le package de carte ESP32 dans l'IDE Arduino. Suivez ces √©tapes :

#. Allez dans **Fichier** et s√©lectionnez **Pr√©f√©rences** dans le menu d√©roulant.

    .. image:: img/esp32_cam_usb.jpg
        :width: 300
        :align: center

#. Dans la fen√™tre **Pr√©f√©rences**, trouvez le champ **URLs suppl√©mentaires du gestionnaire de cartes**. Cliquez dessus pour activer la zone de texte.

#. Ajoutez cette URL dans le champ **URLs suppl√©mentaires du gestionnaire de cartes** : https://espressif.github.io/arduino-esp32/package_esp32_index.json. Cette URL pointe vers le fichier d'index du package pour les cartes ESP32. Cliquez sur **OK** pour enregistrer les modifications.

    .. image:: img/install_esp321.png
        :width: 500
        :align: center

#. Dans la fen√™tre **Gestionnaire de cartes**, recherchez **ESP32**. Cliquez sur le bouton **Installer** pour commencer l'installation. Cela t√©l√©charge et installe le package de cartes ESP32.

    .. image:: img/install_esp322.png
        :width: 500
        :align: center

**3. Installer les biblioth√®ques**

#. Installez la biblioth√®que ``WebSockets`` √† partir du **Gestionnaire de biblioth√®ques**.

#. Suivez les m√™mes √©tapes pour installer la biblioth√®que ``ArduinoJson``.

**4. T√©l√©charger et t√©l√©verser le firmware**

#. T√©l√©chargez le fichier du firmware.

#. Extrayez le fichier du firmware t√©l√©charg√© et renommez le dossier extrait de ``ai-camera-firmware-main`` √† ``ai-camera-firmware``.

#. Ouvrez ``ai-camera-firmware.ino`` avec l'IDE Arduino, ce qui ouvrira √©galement les fichiers de code associ√©s.

    * :download:`ai-camera-firmware <https://github.com/sunfounder/ai-camera-firmware/archive/refs/heads/main.zip>`

#. S√©lectionnez **Carte** -> **esp32** -> **ESP32 Dev Module**.

    .. image:: img/esp32_cam_change_name.png
        :align: center

#. Choisissez le bon port.

    .. image:: img/esp32_cam_ino.png
        :align: center

#. Assurez-vous d'activer **PSRAM** et s√©lectionnez **Huge APP** dans le **Sch√©ma de partitionnement**.

    .. image:: img/esp32_cam_board.png
        :width: 500
        :align: center

#. Enfin, t√©l√©versez le firmware sur l'ESP32 CAM.

    .. image:: img/esp32_cam_port.png
        :width: 400
        :align: center

#. Apr√®s un t√©l√©versement r√©ussi du firmware, vous pouvez trouver plus d'informations sur ce lien : https://github.com/sunfounder/ai-camera-firmware.

