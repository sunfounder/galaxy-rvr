
.. note::

    Bonjour, et bienvenue dans la communaut√© SunFounder pour les passionn√©s de Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez plus profond√©ment dans l'univers de Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et surmontez les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre & Partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aper√ßus.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos derniers produits.
    - **Promotions festives et concours** : Participez √† des concours et promotions lors des f√™tes.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !



.. _ir_obstacle:


Le√ßon 6 √âvitement d'obstacles avec IR
==========================================

Nous plongeons dans l'univers du module d'√©vitement d'obstacles √† infrarouge. Plac√©s sur les c√¥t√©s de notre rover martien, ces capteurs jouent le r√¥le des "yeux" du rover, l'aidant √† √©viter les obstacles lat√©raux et √† naviguer en toute s√©curit√© sur le paysage martien.

Nous apprendrons √† int√©grer ces modules avec notre rover, √† comprendre leur fonctionnement et √† d√©velopper un code permettant √† notre rover d'√©viter intelligemment les obstacles.

Pr√©parez-vous √† √©quiper notre rover d'une intelligence martienne pour l'√©vitement d'obstacles ! C'est parti !


.. raw:: html

   <video width="600" loop autoplay muted>
      <source src="../_static/video/car_ir1.mp4" type="video/mp4">
      Your browser does not support the video tag.
   </video>

Objectifs d'apprentissage
----------------------------

* Comprendre les principes de fonctionnement du module d'√©vitement d'obstacles √† infrarouge et son application dans le rover martien.
* Apprendre √† lire et √† appliquer les donn√©es du module d'√©vitement d'obstacles √† infrarouge dans Scratch.
* Cr√©er un jeu d'√©vitement d'obstacles sur le th√®me de l'exploration martienne en utilisant le module IR et la sc√®ne Scratch.


Mat√©riel
--------------

* Smartphone ou tablette
* Application Mammoth Coding
* GalaxyRVR

D√©mystifier le module
---------------------------------------

Voici le module d'√©vitement d'obstacles √† infrarouge - le compagnon intelligent de notre rover. Ce petit appareil est un concentr√© de technologies. Faisons-en le tour :

.. image:: ../img/ir_avoid.png
    :width: 300
    :align: center


Voici les d√©finitions des broches :

* **GND** : C'est comme l'ancre du module, le connectant √† la masse ou au point commun du circuit.
* **+** : C'est ici que le module re√ßoit son √©nergie, n√©cessitant une alimentation de 3,3 √† 5V DC.
* **Out** : C'est le communicant du module. Par d√©faut, il reste en √©tat haut et ne passe √† bas que lorsqu'il d√©tecte un obstacle.
* **EN** : Voici le contr√¥leur du module. Cette broche **enable** d√©cide quand le module doit fonctionner. Par d√©faut, elle est connect√©e √† la masse (GND), ce qui signifie que le module est toujours actif.


Curieux de savoir comment ce petit module fonctionne ? C'est assez fascinant ! Il 
utilise une paire de composants IR - un √©metteur et un r√©cepteur. L'√©metteur 
fonctionne comme une lampe torche, √©mettant de la lumi√®re infrarouge. 
Lorsqu'un obstacle appara√Æt, la lumi√®re infrarouge est r√©fl√©chie et capt√©e par le 
r√©cepteur. Le module √©met alors un signal bas, avertissant notre rover de la pr√©sence 
de l'obstacle.

.. image:: ../img/ir_receive.png
    :align: center

Notre petit module est plut√¥t robuste, d√©tectant les obstacles dans une plage de 2 √† 
40 cm et disposant d'excellentes capacit√©s anti-interf√©rences. Cependant, la couleur 
des objets influence sa capacit√© de d√©tection. Les objets plus sombres, en particulier 
les noirs, sont d√©tect√©s √† une distance plus courte. 
Face √† un mur blanc, le capteur est le plus efficace, d√©tectant dans une plage de 2 √† 30 cm.


L'√©tat bas de la broche **EN** active le module, le cavalier maintenant la broche **EN** connect√©e √† la masse. Si vous souhaitez contr√¥ler la broche **EN** par code, il faudra retirer le cavalier.

.. image:: ../img/ir_cap.png
    :width: 400
    :align: center

Le module poss√®de deux potentiom√®tres, l'un pour ajuster la puissance d'√©mission et l'autre pour ajuster la fr√©quence d'√©mission. En ajustant ces deux potentiom√®tres, vous pouvez ajuster la distance de d√©tection effective.

.. image:: ../img/ir_avoid_pot.png
    :width: 400
    :align: center 


Voil√† pour notre petit module. √Ä l'√©tape suivante, nous apprendrons comment l'int√©grer √† notre rover et le contr√¥ler √† l'aide de l'Arduino. Restez √† l'√©coute !



Valeurs de d√©tection du module d'√©vitement d'obstacles √† infrarouge
--------------------------------------------------------------------------

1. Allumez le GalaxyRVR.


.. raw:: html

   <br></br>

2. Nous arrivons √† une √©tape essentielle, qui consiste √† ajuster les distances de d√©tection de nos capteurs en fonction de l'environnement actuel. Les param√®tres d'usine peuvent ne pas √™tre optimaux. Si la distance de d√©tection des deux modules infrarouges est trop courte, le rover pourrait heurter des obstacles. Si elle est trop longue, le rover pourrait commencer √† tourner alors qu'il est encore loin de l'obstacle, ce qui pourrait affecter son mouvement.

    Voici comment faire les ajustements :

    a. Commencez par ajuster le module d'√©vitement d'obstacles droit. Pendant le transport, des collisions peuvent avoir inclin√© l'√©metteur et le r√©cepteur sur le module infrarouge. Vous devrez donc les redresser manuellement.

        .. raw:: html

            <video width="600" loop autoplay muted>
                <source src="../_static/video/ir_adjust1.mp4" type="video/mp4">
                Your browser does not support the video tag.
            </video>

    b. Placez un obstacle √† environ 20 cm directement devant le module droit. La bo√Æte dans laquelle notre kit Rover est arriv√© est un bon choix pour cela ! Maintenant, tournez le potentiom√®tre sur le module jusqu'√† ce que la lumi√®re indicatrice du module s'allume. Ensuite, d√©placez l'obstacle d'avant en arri√®re pour v√©rifier si la lumi√®re indicatrice s'allume √† la distance souhait√©e. Si la lumi√®re ne s'allume pas √† la bonne distance ou reste allum√©e sans s'√©teindre, vous devrez ajuster l'autre potentiom√®tre.

        .. raw:: html

            <video width="600" loop autoplay muted>
                <source src="../_static/video/ir_adjust2.mp4" type="video/mp4">
                Your browser does not support the video tag.
            </video>


    c. R√©p√©tez le m√™me processus pour l'autre module.



3. Voyons maintenant ce que sont ces deux signaux. Tout d'abord, :ref:`app_connect`.

.. raw:: html

   <br></br>


4. Dans la cat√©gorie GalaxyRVR, trouvez les blocs "√©tat IR gauche" et "√©tat IR droit". Ces blocs stockent les r√©sultats de d√©tection des modules IR. Assurez-vous de cocher les cases pour ces blocs.

    .. image:: img/4_ir_statusblock.png

5. Les valeurs s'afficheront maintenant sur la sc√®ne.

    .. image:: img/4_ir_statusvalue.png

6. Approchez votre main des modules d'√©vitement d'obstacles √† infrarouge pour d√©clencher la d√©tection et observer les changements de valeur sur la sc√®ne.

Si les modules IR d√©tectent un obstacle, la valeur sera Vrai ; s'ils ne d√©tectent rien, la valeur sera Faux.



R√©agir au module d'√©vitement d'obstacles √† infrarouge
-------------------------------------------------------------

Nous pouvons utiliser les modules d'√©vitement d'obstacles √† infrarouge pour que le GalaxyRVR √©vite automatiquement les obstacles sur les deux c√¥t√©s.


1. Faites glisser un bloc drapeau vert

.. image:: img/4_ir_start.png

2. R√©glez la vitesse. Ici, nous la r√©glons √† 30 % pour que ce ne soit pas trop rapide, facilitant ainsi le d√©bogage.

.. image:: img/4_ir_speed.png


3. Trouvez le bloc ``quand l'IR gauche est bloqu√©``.

.. image:: img/4_ir_when_blocked.png

4. Lorsque le c√¥t√© gauche d√©tecte un obstacle, le GalaxyRVR doit tourner √† droite.

.. image:: img/4_ir_turn_right.png

5. Continuez √† tourner √† droite jusqu'√† ce que le c√¥t√© gauche ne d√©tecte plus l'obstacle.

.. image:: img/4_ir_wait_until.png


6. Arr√™tez-vous.

.. image:: img/4_ir_stop.png


7. Une fois ces blocs assembl√©s, essayez de d√©clencher le module d'√©vitement d'obstacles √† infrarouge gauche avec votre main. Le GalaxyRVR tournera intelligemment √† droite pour √©viter votre main.

.. raw:: html

   <br></br>



8. Maintenez ces blocs enfonc√©s pour faire appara√Ætre un menu, o√π vous pourrez dupliquer le code.

.. image:: img/4_ir_duplicate.png

9. Dans le code dupliqu√©, √©changez les c√¥t√©s gauche et droit.

.. image:: img/4_ir_left_right.png

10. Vous remarquerez que si les deux √©v√©nements IR sont d√©clench√©s simultan√©ment, le comportement peut devenir erratique. Pour √©viter cela, le bloc "arr√™ter les autres scripts dans le sprite" sera utile. Il garantit qu'un seul √©v√©nement capteur est trait√© √† la fois.

.. image:: img/4_ir_stop_script.png

.. note:: Le bloc d'arr√™t des scripts et les blocs avec des param√®tres de temps (par exemple, avancer pendant 1 seconde) peuvent entrer en conflit dans certains cas, donc √©vitez de les utiliser ensemble autant que possible.


11. Maintenant, le GalaxyRVR tournera √† gauche ou √† droite lorsque des obstacles seront d√©tect√©s de chaque c√¥t√©. Vous pouvez tester cela en d√©clenchant les deux capteurs avec votre main pour que le GalaxyRVR √©vite les obstacles √† gauche et √† droite.


.. raw:: html

   <br></br>


12. Ajoutez un bloc avancer sous chaque bloc de code pour que le GalaxyRVR continue d'avancer apr√®s avoir √©vit√© l'obstacle.

.. image:: img/4_ir_avoid_move.png


Maintenant, cliquez sur le drapeau vert, et le GalaxyRVR avancera en continu, tournant pour √©viter les obstacles puis reprenant sa route apr√®s les avoir √©vit√©s.



Blocs li√©s au module IR
----------------------------------------

.. image:: img/block/ir_when.png

Voici un bloc √©v√©nement d√©clench√© lorsque le capteur IR gauche d√©tecte un obstacle. Vous pouvez :

    * Changer "gauche" en "droite" dans le menu d√©roulant

.. image:: img/block/ir_wait_until.png

Ce bloc met le programme en pause jusqu'√† ce que le capteur IR gauche ne d√©tecte plus d'obstacle, puis continue. Vous pouvez :

    * Changer "gauche" en "droite" dans le premier menu d√©roulant
    * Changer "n'est pas" en "est" dans le deuxi√®me menu d√©roulant pour op√©rer dans la condition oppos√©e

.. image:: img/block/ir_condition.png

Ceci est un bloc conditionnel qui renvoie VRAI si le capteur IR gauche d√©tecte un obstacle, sinon FAUX. Il est couramment utilis√© dans les blocs n√©cessitant des conditions comme ``si``. Vous pouvez :

    * Changer "gauche" en "droite" dans le menu d√©roulant

.. image:: img/block/ir_left_value.png

Ce bloc affiche si le capteur IR gauche d√©tecte actuellement un obstacle.

.. image:: img/block/ir_right_value.png

Ce bloc affiche si le capteur IR droit d√©tecte actuellement un obstacle.

