.. note::

    Bonjour et bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez plus profond√©ment dans l'univers de Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre & Partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux aper√ßus.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos derniers produits.
    - **Promotions festives et concours** : Participez √† des concours et promotions lors des f√™tes.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

Le√ßon 11 M√©canisme de Servo et d'Inclinaison
===============================================================

Bienvenue de nouveau, jeunes explorateurs ! Dans l'aventure d'aujourd'hui, nous allons plonger dans le fascinant syst√®me visuel du Rover martien. Tout comme nos yeux et notre cou travaillent ensemble pour nous aider √† voir et √† naviguer dans notre environnement, notre Rover a √©galement besoin d'un syst√®me similaire pour traverser le dangereux paysage martien. Et c'est exactement ce que nous allons construire aujourd'hui !

Le syst√®me visuel de notre Rover se compose de deux parties principales : une cam√©ra qui agit comme ses "yeux" et un m√©canisme d'inclinaison qui fonctionne comme un "cou", lui permettant de regarder vers le haut et vers le bas. √Ä la fin de cette le√ßon, notre Rover aura la capacit√© de "voir" et de "hocher la t√™te" !

Tout d'abord, nous allons construire le m√©canisme d'inclinaison - un dispositif qui tiendra la cam√©ra de notre Rover et lui permettra de tourner verticalement. C'est comme donner √† notre Rover un cou, pour qu'il puisse faire bouger sa "t√™te" ou sa cam√©ra de haut en bas !

Ensuite, nous apprendrons √† conna√Ætre le servo, le petit mais puissant "muscle" qui actionne notre m√©canisme d'inclinaison. Nous comprendrons son fonctionnement et comment le contr√¥ler en utilisant la programmation Arduino.

Tout comme nos muscles du cou d√©placent notre t√™te pour que nos yeux aient une meilleure vue, le servo d√©placera le m√©canisme d'inclinaison afin que la cam√©ra du Rover puisse mieux explorer le paysage martien.

Alors, pr√©parez-vous, explorateurs, commen√ßons notre mission pour √©quiper notre Rover de son propre syst√®me visuel !

.. raw:: html

    <video width="600" loop autoplay muted>
        <source src="../_static/video/servo_range.mp4" type="video/mp4">
        Your browser does not support the video tag.
    </video>



Objectifs d'apprentissage
------------------------------

* Introduire les principes de fonctionnement des moteurs servo et leur application dans le contr√¥le m√©canique.
* Apprendre √† r√©gler facilement les angles des servos en utilisant Mammoth Coding, pour un contr√¥le pr√©cis.
* Concevoir des projets interactifs sur la plateforme Mammoth Coding permettant une interaction physique √† l'aide des moteurs servo.


Mat√©riel n√©cessaire
-----------------------

* Smartphone ou tablette
* Application Mammoth Coding
* GalaxyRVR

Qu'est-ce qu'un Servo ?
----------------------------------------

Avez-vous d√©j√† assist√© √† un spectacle de marionnettes ? Si oui, vous avez peut-√™tre √©t√© √©merveill√© de voir comment le marionnettiste peut faire bouger les bras, les jambes et la t√™te de la marionnette avec une telle fluidit√©, simplement en tirant sur quelques ficelles. D'une certaine mani√®re, les moteurs servo sont comme nos marionnettistes.

.. image:: ../img/puppet_show.png
    :width: 200
    :align: center

Les moteurs servo sont des types sp√©ciaux de moteurs qui ne tournent pas simplement comme une roue. Au lieu de cela, ils peuvent se d√©placer vers une position sp√©cifique et maintenir cette position. Imaginez que vous jouez √† "Simon dit", et Simon dit : "L√®ve ton bras √† un angle de 90 degr√©s !" Vous pouvez le faire, n'est-ce pas ? C'est parce qu'√† l'instar d'un servo, vous pouvez contr√¥ler exactement combien vous devez d√©placer votre bras.

.. image:: ../img/servo.png
    :align: center

* Ligne brune : GND
* Ligne orange : Broche de signal, connect√©e √† la broche PWM de la carte principale.
* Fil rouge : VCC

Tout comme vous pouvez contr√¥ler vos bras pour atteindre des positions sp√©cifiques, nous pouvons utiliser des moteurs servo pour contr√¥ler la position exacte des objets dans nos projets. Dans notre Rover martien, nous utiliserons un servo pour contr√¥ler le mouvement de haut en bas de notre m√©canisme d'inclinaison, tout comme vous pouvez hocher la t√™te de haut en bas.

√Ä l'√©tape suivante, nous allons entreprendre un voyage fascinant √† l'int√©rieur d'un moteur servo pour comprendre son fonctionnement. Pr√™t pour un peu de magie ? Allons-y !

Comment fonctionne un Servo ?
-------------------------------------------

Alors, comment un servo op√®re-t-il sa magie ? Partons en voyage captivant √† l'int√©rieur d'un servo !

Si nous regardions √† l'int√©rieur d'un servo, nous verrions plusieurs pi√®ces. Au c≈ìur d'un servo se trouve un moteur r√©gulier, tr√®s similaire aux moteurs qui font tourner les roues de notre Rover martien. Enroul√© autour du moteur, il y a un grand pignon qui est connect√© √† un petit pignon sur l'arbre du moteur. C'est ainsi que le mouvement circulaire rapide du moteur est transform√© en un mouvement plus lent mais plus puissant.

.. image:: ../img/servo_internal.png
    :align: center

Mais ce n'est pas ce qui rend un servo sp√©cial. La magie se passe dans un petit composant √©lectronique appel√© "potentiom√®tre" et dans le "circuit de contr√¥le". Voici comment cela fonctionne : lorsque le servo se d√©place, le potentiom√®tre tourne et change sa r√©sistance. Le circuit de contr√¥le mesure ce changement de r√©sistance et sait exactement dans quelle position se trouve le servo. C'est astucieux, non ?

Pour contr√¥ler un servo, nous lui envoyons un type sp√©cial de signal appel√© "modulation de largeur d'impulsion" ou PWM. En modifiant la largeur de ces impulsions, nous pouvons contr√¥ler exactement combien le servo se d√©place et maintenir cette position.

√Ä l'√©tape suivante, nous apprendrons √† contr√¥ler un servo en utilisant une application. Pr√™t pour quelques sorts sous forme de code ? Allons-y !



Exploration du Syst√®me d'Inclinaison du Rover Martien
---------------------------------------------------------


**R√©glage de l'Angle du Cardan**

1. V√©rifiez l'angle du servo, et vous pouvez voir l'angle actuel sur la sc√®ne.

.. image:: img/10_servo_angle.png

2. Faites glisser un bloc ``r√©glage de l'angle du servo √† 90 degr√©s``. Cliquez dessus, et vous verrez le GalaxyRVR faire face vers l'avant.

.. image:: img/10_servo_set_angle.png

3. Changez la valeur √† 45 et cliquez dessus, vous verrez le GalaxyRVR regarder vers le haut.

.. image:: img/10_servo_set_angle_45.png

4. Apr√®s plusieurs essais, vous d√©couvrirez que le cardan du GalaxyRVR peut se d√©placer entre 0 et 135 degr√©s. √Ä mesure que l'angle augmente, le cardan s'abaisse.


**Changement de l'Angle du Cardan**

1. Le syst√®me de cardan du servo du GalaxyRVR est une structure √† un seul degr√© de libert√©, donc vous n'avez besoin de contr√¥ler que ses fonctions "r√©initialiser", "monter" et "descendre".

.. raw:: html

   <br></br>

2. Cr√©ons maintenant son bouton de r√©initialisation. Faites glisser un bloc ``quand ce sprite est cliqu√©``.

.. image:: img/10_servo_when_click.png

3. Int√©grez un bloc ``r√©glage de l'angle du servo √† 90 degr√©s`` pour faire face le cardan vers l'avant.

.. image:: img/10_servo_when_90.png

4. Faites glisser un bloc ``quand la touche fl√©ch√©e vers le haut est press√©e``.

.. image:: img/10_servo_when_up.png

5. Diminuez l'angle du servo lorsque la touche fl√©ch√©e vers le haut est press√©e.

.. image:: img/10_servo_when_up2.png

6. De m√™me, ajoutez un √©v√©nement pour la touche fl√©ch√©e vers le bas pour faire regarder le cardan vers le bas.

.. image:: img/10_servo_when_down.png

Maintenant, cliquez sur le bouton plein √©cran pour agrandir la sc√®ne. Cliquez sur haut et bas pour ajuster l'angle du cardan, et cliquez sur le sprite pour r√©initialiser l'angle.

.. _tilt_system:

Touchez la Zone de la Sc√®ne pour Ajuster l'Angle du Cardan
-------------------------------------------------------------

Ensuite, nous utiliserons un sprite en forme de fl√®che pour obtenir des ajustements plus fluides de l'angle du servo.

Lorsque nous touchons la fl√®che, nous pouvons faire glisser la direction du sprite de fl√®che.

1. Supprimez le sprite d'origine.

.. image:: img/6_animate_delete.png

2. Ajoutez un sprite en forme de fl√®che. Nous allons d√©finir la direction du cardan en fonction de son orientation.

.. image:: img/10_servo_arrow.png

3. Un bloc ``quand ce sprite est cliqu√©`` est exactement ce dont nous avons besoin.

.. image:: img/6_animate_when_touch.png
    :width: 230

4. Laissez le programme se r√©p√©ter jusqu'√† ce que nous le rel√¢chions, c'est-√†-dire que nous ne touchons plus le sprite.

.. image:: img/6_animate_repeat_touching.png
    :width: 550

5. Faites glisser un bloc ``pointer vers touch_position`` pour que le sprite fasse face √† la position touch√©e.

.. image:: img/10_servo_arrow_point_toward.png

6. Faites glisser un bloc ``r√©glage de l'angle du servo √† 90 degr√©s`` et int√©grez un bloc ``direction`` pour aligner l'angle du cardan avec l'orientation du sprite en fl√®che. De cette mani√®re, lorsque nous modifions la direction du sprite en fl√®che (c'est-√†-dire que nous touchons la zone de la sc√®ne), nous pouvons changer l'angle du cardan.

.. image:: img/10_servo_arrow_angle_direction.png

7. Ajoutez une v√©rification de limite pour garantir que l'orientation du sprite en fl√®che ne d√©passe pas 135 degr√©s.

.. image:: img/10_servo_arrow_135.png

8. De m√™me, assurez-vous que son orientation ne tombe pas en dessous de 0 degr√©s.

.. image:: img/10_servo_arrow_0.png

Touchez le sprite, et il changera de direction au fur et √† mesure que vous faites glisser, modifiant l'angle du cardan.

Si vous trouvez qu'il est facile de faire glisser votre doigt hors du sprite en fl√®che, vous pouvez augmenter la taille du sprite en cons√©quence.

Blocs li√©s au Servo
-------------------------------

.. image:: img/block/servo_set_angle.png

Ce bloc est utilis√© pour r√©gler l'angle du servo. La plage est de 0 √† 180 degr√©s (mais en raison des limitations structurelles, la plage r√©ellement utilisable est de 0 √† 135 degr√©s).

.. image:: img/block/servo_increase_angle.png

Ce bloc augmente (ou diminue) l'angle du servo. La valeur peut √™tre n√©gative.

.. image:: img/block/servo_value.png

L'angle actuel du servo.
