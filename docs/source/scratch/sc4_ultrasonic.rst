.. note::

    ¬°Hola! Bienvenido a la comunidad de entusiastas de SunFounder Raspberry Pi, Arduino y ESP32 en Facebook. Sum√©rgete en el fascinante mundo de Raspberry Pi, Arduino y ESP32 junto a otros apasionados.

    **¬øPor qu√© unirse?**

    - **Soporte experto**: Resuelve problemas postventa y desaf√≠os t√©cnicos con la ayuda de nuestra comunidad y equipo.
    - **Aprende y comparte**: Intercambia consejos y tutoriales para mejorar tus habilidades.
    - **Preestrenos exclusivos**: Obt√©n acceso anticipado a nuevos anuncios de productos y adelantos exclusivos.
    - **Descuentos especiales**: Disfruta de descuentos exclusivos en nuestros productos m√°s recientes.
    - **Promociones festivas y sorteos**: Participa en sorteos y promociones durante las festividades.

    üëâ ¬øListo para explorar y crear con nosotros? Haz clic en [|link_sf_facebook|] y √∫nete hoy mismo.


Lecci√≥n 4 Ultrasonido
===========================

En nuestra √∫ltima aventura, equipamos nuestro Mars Rover con "ojos" en sus lados, creando un sistema b√°sico de evasi√≥n de obst√°culos. Sin embargo, hay un punto ciego justo al frente, ¬°un reto que estamos listos para superar!

Hoy, en esta lecci√≥n, le daremos a nuestro Rover un nuevo sentido de "vista". Instalaremos un m√≥dulo sensor de ultrasonido, que actuar√° como un par de ojos centrales, ayudando a nuestro rover a detectar obst√°culos directamente delante de √©l.

Profundizaremos en los fascinantes mecanismos de las ondas ultras√≥nicas y exploraremos c√≥mo mejoran la capacidad de nuestro Rover para navegar en terrenos complejos. Con esta adici√≥n, nuestro Mars Rover ser√° m√°s perceptivo y √°gil, listo para embarcarse en misiones de exploraci√≥n m√°s ambiciosas.

¬°√önete a nosotros mientras damos un paso m√°s en este emocionante viaje STEAM, haciendo que nuestro Mars Rover sea a√∫n m√°s capaz de explorar territorios inexplorados!

.. raw:: html

   <video width="600" loop autoplay muted>
      <source src="../_static/video/ultrasonic_avoid.mp4" type="video/mp4">
      Your browser does not support the video tag.
   </video>


Objetivos de aprendizaje
---------------------------

* Comprender el principio de medici√≥n de distancia por ultrasonido.
* Aprender a usar la APP Mammoth Coding y el m√≥dulo de ultrasonido para la medici√≥n de distancias.
* Practicar la aplicaci√≥n del m√≥dulo de ultrasonido para evitar obst√°culos en el GalaxyRVR.


Materiales
-------------

* Tel√©fono inteligente o tableta
* APP Mammoth Coding
* GalaxyRVR


Explorando el M√≥dulo Ultrasonido
--------------------------------------------

Conozcamos el HC-SR04, un poderoso sensor de distancia ultras√≥nico. Este peque√±o dispositivo puede medir con precisi√≥n distancias desde 2 cm hasta 400 cm, ¬°sin tocar nada! Asombroso, ¬øverdad? ¬°Es como tener un superpoder! Puede "ver" distancias usando ondas sonoras, al igual que un murci√©lago navega por la noche.

Utiliza cuatro superpoderes, o mejor dicho, cuatro pines para hacer su magia:

.. image:: ../img/ultrasonic_pic.png
    :width: 400
    :align: center

* **TRIG (Entrada de pulso de disparo)** - Es el bot√≥n de inicio de nuestro superh√©roe. Le dice: "¬°Es hora de enviar una onda s√≥nica!"
* **ECHO (Salida de pulso de eco)** - As√≠ es como nuestro superh√©roe escucha el eco de la onda sonora que envi√≥.
* **VCC** - Incluso los superh√©roes necesitan energ√≠a. Lo conectamos a una fuente de alimentaci√≥n de 5V.
* **GND** - Es la conexi√≥n a tierra. ¬°Igual que los superh√©roes necesitan mantenerse conectados a la realidad!

Imagina a nuestro superh√©roe, el Sensor Ultras√≥nico HC-SR04, jugando un juego de eco en las monta√±as.

.. image:: ../img/ultrasonic_prin.jpg
    :width: 800

* Primero, el cerebro de nuestro superh√©roe, el MCU, dice "¬°Listo, prep√°rate, ya!" enviando una se√±al de alto nivel durante al menos 10 microsegundos. Es como cuando reunimos nuestra energ√≠a antes de gritar en un valle.
* Al o√≠r "¬°Ya!", nuestro superh√©roe grita fuerte 8 veces r√°pidamente. Este grito s√∫per s√≥nico se env√≠a a una velocidad de 40 kHz. El superh√©roe tambi√©n inicia un cron√≥metro y espera el eco.
* Si hay un obst√°culo al frente, el grito chocar√° contra √©l y rebotar√°. Al escuchar el eco, nuestro superh√©roe detiene el cron√≥metro y anota el tiempo. Tambi√©n env√≠a una se√±al de alto nivel al MCU para avisar que ha escuchado el eco.
* Finalmente, para averiguar qu√© tan lejos est√° el obst√°culo, nuestro superh√©roe usa una f√≥rmula simple. Toma el tiempo registrado en el cron√≥metro, lo divide por 2 y lo multiplica por la velocidad del sonido (340m/s). ¬°El resultado es la distancia al obst√°culo!

As√≠ es como nuestro sensor superh√©roe puede determinar si hay un obst√°culo en su camino y a qu√© distancia se encuentra. Incre√≠ble, ¬øverdad? A continuaci√≥n, aprenderemos c√≥mo podemos usar este superpoder en nuestro Mars Rover.




Valores de Detecci√≥n del M√≥dulo de Distancia Ultras√≥nico
-----------------------------------------------------------

1. Vamos a ver cu√°les son los valores de detecci√≥n del m√≥dulo de distancia ultras√≥nico. Primero, :ref:`app_connect`.

2. Encuentra el bloque "distancia en cm" en la categor√≠a GalaxyRVR. Marca su casilla.

.. image:: img/6_ultrasonic_value.png

3. Esto mostrar√° su valor en el escenario.

.. image:: img/6_ultrasonic_value2.png

4. Mueve tu mano hacia adelante y hacia atr√°s frente al m√≥dulo ultras√≥nico, y ver√°s la distancia entre tu mano y el m√≥dulo mostrada en el escenario. La unidad es cm.



Respondiendo al M√≥dulo de Distancia Ultras√≥nico
---------------------------------------------------

Podemos usar el m√≥dulo de evasi√≥n de obst√°culos por infrarrojos para hacer que el GalaxyRVR evite autom√°ticamente los obst√°culos al frente.

1. Arrastra un bloque de bandera verde peque√±a.

.. image:: img/6_ultrasonic_flag.png

2. Establece la velocidad. Aqu√≠ la configuramos al 30%, para que no sea demasiado r√°pido, facilitando la depuraci√≥n.

.. image:: img/6_ultrasonic_speed.png

3. Coloca un bloque de avanzar para mantenerlo en movimiento cuando no haya obst√°culos.

.. image:: img/6_ultrasonic_forward.png

4. Encuentra el bloque ``when distance < 15 cm``.

.. image:: img/6_ultrasonic_when.png

5. Cuando se detecta un obst√°culo, el GalaxyRVR deja de moverse y retrocede.

.. image:: img/6_ultrasonic_backward.png

6. Gira ligeramente (a la izquierda o a la derecha).

.. image:: img/6_ultrasonic_turn.png

7. Despu√©s de completar el giro, avanza de nuevo.

.. image:: img/6_ultrasonic_forward_again.png

Ahora, coloca el GalaxyRVR en el suelo y continuar√° avanzando hasta que encuentre un obst√°culo directamente al frente, momento en el que cambiar√° de direcci√≥n.



Bloques Relacionados con el M√≥dulo Ultrasonido
---------------------------------------------------

.. image:: img/block/ultra_when.png

Este es un bloque de evento que se activa cuando el sensor ultras√≥nico detecta un obst√°culo a menos de 15 cm. Puedes:

    * Cambiar ``<`` por ``>`` en el men√∫ desplegable
    * Modificar el n√∫mero para ajustar la condici√≥n del umbral

.. image:: img/block/ultra_wait_until.png

Este bloque pausa el programa hasta que el sensor ultras√≥nico detecte un obst√°culo a m√°s de 15 cm, y luego contin√∫a el programa. Puedes:

    * Cambiar ``<`` por ``>`` en el men√∫ desplegable
    * Modificar el n√∫mero para ajustar la condici√≥n del umbral

.. image:: img/block/ultra_condition.png

Este es un bloque condicional que devuelve VERDADERO si la distancia detectada por el sensor ultras√≥nico es menor de 15 cm, de lo contrario FALSO. Se usa com√∫nmente en bloques condicionales como ``si``. Puedes:

    * Cambiar ``<`` por ``>`` en el men√∫ desplegable
    * Modificar el n√∫mero para ajustar la condici√≥n del umbral

.. image:: img/block/ultra_value.png

Este bloque muestra la distancia actual medida por el sensor ultras√≥nico.




Bloques Relacionados con el Servo
--------------------------------------

.. image:: img/block/servo_set_angle.png

Este bloque se utiliza para establecer el √°ngulo del servo. El rango es de 0 a 180 grados (sin embargo, debido a limitaciones estructurales, el rango utilizable real es de 0 a 135 grados).

.. image:: img/block/servo_increase_angle.png

Este bloque incrementa (o disminuye) el √°ngulo del servo. El valor puede ser negativo.


.. image:: img/block/servo_value.png

El √°ngulo actual del servo.

