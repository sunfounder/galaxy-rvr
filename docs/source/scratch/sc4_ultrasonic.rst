.. note::

    Bonjour, bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez au c≈ìur de Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques gr√¢ce √† l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre & Partager** : √âchangez des conseils et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et √† des aper√ßus privil√©gi√©s.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos produits les plus r√©cents.
    - **Promotions festives et concours** : Participez √† des concours et √† des promotions pendant les f√™tes.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !


Le√ßon 4 : Module Ultrasonique
==================================

Lors de notre derni√®re aventure, nous avons √©quip√© notre Rover martien de "yeux" sur ses c√¥t√©s pour cr√©er un syst√®me de d√©tection d'obstacles basique. Cependant, il reste un angle mort √† l'avant ‚Äì un d√©fi que nous sommes pr√™ts √† relever !

Aujourd'hui, dans cette le√ßon, nous allons offrir √† notre Rover un nouveau sens de la "vision". Nous installerons un module √† capteur ultrasonique, qui jouera le r√¥le de "yeux" centraux et aidera notre Rover √† d√©tecter les obstacles directement devant lui.

Nous allons explorer les fascinants m√©canismes des ondes ultrasoniques et d√©couvrir comment elles am√©liorent la capacit√© de notre Rover √† naviguer sur des terrains complexes. Avec cette addition, notre Rover martien sera encore plus perceptif et agile, pr√™t √† entreprendre des missions d'exploration plus ambitieuses.

Rejoignez-nous dans cette nouvelle √©tape passionnante de notre parcours STEAM, et rendons notre Rover encore plus performant pour explorer des territoires inconnus !

.. raw:: html

   <video width="600" loop autoplay muted>
      <source src="../_static/video/ultrasonic_avoid.mp4" type="video/mp4">
      Your browser does not support the video tag.
   </video>


Objectifs d'apprentissage
----------------------------

* Comprendre le principe de la mesure de distance par ultrasons.
* Apprendre √† utiliser l'APP Mammoth Coding et le module ultrasonique pour mesurer des distances.
* Pratiquer l'utilisation du module ultrasonique pour √©viter les obstacles avec le GalaxyRVR.

Mat√©riel
-------------

* Smartphone ou tablette
* APP Mammoth Coding
* GalaxyRVR

Exploration du Module Ultrasonique
--------------------------------------------

Faisons connaissance avec le HC-SR04, un capteur de distance ultrasonique puissant. Ce petit appareil peut mesurer avec pr√©cision des distances de 2 cm √† 400 cm, sans avoir besoin de toucher quoi que ce soit ! Impressionnant, non ? C'est comme avoir un super-pouvoir ! Il peut "voir" des distances en utilisant des ondes sonores, un peu comme une chauve-souris qui navigue dans l'obscurit√©.

Il utilise quatre "super-pouvoirs", ou plut√¥t, quatre broches pour r√©aliser sa magie :

.. image:: ../img/ultrasonic_pic.png
    :width: 400
    :align: center

* **TRIG (Trigger Pulse Input)** - C'est le bouton de d√©part de notre super-h√©ros. Il lui dit : "H√©, c'est le moment d'envoyer une onde ultrasonique !"
* **ECHO (Echo Pulse Output)** - C'est ainsi que notre super-h√©ros √©coute l'√©cho de l'onde sonore qu'il a envoy√©e.
* **VCC** - M√™me les super-h√©ros ont besoin d'√©nergie. Nous le connectons √† une alimentation de 5V.
* **GND** - C'est la connexion √† la masse, tout comme les super-h√©ros doivent rester connect√©s √† la r√©alit√© !

Imaginez notre super-h√©ros, le capteur ultrasonique HC-SR04, jouant √† un jeu d'√©cho dans les montagnes.

.. image:: ../img/ultrasonic_prin.jpg
    :width: 800

* Tout d'abord, le cerveau de notre super-h√©ros, le MCU, dit "Pr√™t, feu, partez !" en envoyant un signal de niveau haut pendant au moins 10 microsecondes. C'est comme lorsque nous rassemblons notre √©nergie avant de crier dans une vall√©e.
* √Ä l'√©coute de "Partez !", notre super-h√©ros √©met 8 ondes ultrasoniques √† une vitesse de 40 kHz. Le super-h√©ros commence √©galement un chronom√®tre et reste attentif au retour de l'√©cho.
* S'il y a un obstacle devant, l'onde frappera l'obstacle et renverra un √©cho. D√®s que l'√©cho est d√©tect√©, le super-h√©ros arr√™te le chronom√®tre et enregistre le temps. Il envoie √©galement un signal de niveau haut pour informer le MCU qu'il a entendu l'√©cho.
* Enfin, pour d√©terminer √† quelle distance se trouve l'obstacle, le super-h√©ros utilise une formule simple. Il prend le temps enregistr√© sur le chronom√®tre, le divise par 2 et le multiplie par la vitesse du son (340 m/s). Le r√©sultat est la distance jusqu'√† l'obstacle !

Voil√† comment notre capteur super-h√©ros peut d√©tecter la pr√©sence d'un obstacle et en d√©terminer la distance. Incroyable, non ? Ensuite, nous allons apprendre comment utiliser ce super-pouvoir dans notre Rover martien !




Valeurs de d√©tection du module ultrasonique
----------------------------------------------------------

1. Voyons quelles sont les valeurs de d√©tection du module de distance ultrasonique. Tout d'abord, :ref:`app_connect`.

2. Trouvez le bloc "distance en cm" dans la cat√©gorie GalaxyRVR. Cochez sa case.

.. image:: img/6_ultrasonic_value.png

3. Cela affichera la valeur sur la sc√®ne.

.. image:: img/6_ultrasonic_value2.png

4. D√©placez votre main devant le module ultrasonique et vous verrez la distance entre votre main et le module s'afficher sur la sc√®ne. L'unit√© est le cm.

R√©agir au module de distance ultrasonique
--------------------------------------------------------------------

Nous pouvons utiliser le module de d√©tection d'obstacles infrarouge pour permettre au GalaxyRVR d'√©viter automatiquement les obstacles.

1. Faites glisser un petit bloc de drapeau vert.

.. image:: img/6_ultrasonic_flag.png

2. R√©glez la vitesse. Ici, nous la r√©glons √† 30 %, pour ne pas aller trop vite et faciliter le d√©bogage.

.. image:: img/6_ultrasonic_speed.png

3. Placez un bloc "avancer" pour qu'il continue √† se d√©placer lorsqu'il n'y a pas d'obstacles.

.. image:: img/6_ultrasonic_forward.png

4. Trouvez le bloc ``quand distance < 15 cm``.

.. image:: img/6_ultrasonic_when.png

5. Lorsque l'obstacle est d√©tect√©, le GalaxyRVR s'arr√™te et recule.

.. image:: img/6_ultrasonic_backward.png

6. Faites un l√©ger virage (√† gauche ou √† droite).

.. image:: img/6_ultrasonic_turn.png

7. Apr√®s avoir effectu√© le virage, avancez √† nouveau.

.. image:: img/6_ultrasonic_forward_again.png

Placez maintenant le GalaxyRVR sur le sol et il continuera √† avancer jusqu'√† ce qu'il rencontre un obstacle directement devant lui, moment auquel il changera de direction.

Blocs li√©s au module ultrasonique
-------------------------------------------------

.. image:: img/block/ultra_when.png

C'est un bloc d'√©v√©nement d√©clench√© lorsque le capteur ultrasonique d√©tecte un obstacle √† moins de 15 cm. Vous pouvez :

    * Changer ``<`` to ``>`` dans le menu d√©roulant.
    * Modifier le nombre pour ajuster la condition de seuil.

.. image:: img/block/ultra_wait_until.png

Ce bloc met le programme en pause jusqu'√† ce que le capteur ultrasonique d√©tecte un obstacle √† plus de 15 cm, puis reprend le programme. Vous pouvez :

    * Changer ``<`` to ``>`` dans le menu d√©roulant.
    * Modifier le nombre pour ajuster la condition de seuil.

.. image:: img/block/ultra_condition.png

C'est un bloc conditionnel qui renvoie TRUE si la distance d√©tect√©e par le capteur ultrasonique est effectivement inf√©rieure √† 15 cm, sinon il renvoie FALSE. Il est couramment utilis√© dans des blocs n√©cessitant des conditions comme ``if``. Vous pouvez :

    * Changer ``<`` to ``>`` dans le menu d√©roulant.
    * Modifier le nombre pour ajuster la condition de seuil.

.. image:: img/block/ultra_value.png

Ce bloc affiche la distance actuelle mesur√©e par le capteur ultrasonique.




Blocs li√©s au servo
-------------------------------

.. image:: img/block/servo_set_angle.png

Ce bloc est utilis√© pour d√©finir l'angle du servo. La plage est de 0 √† 180 degr√©s (toutefois, en raison de limitations structurelles, la plage r√©elle utilisable est de 0 √† 135 degr√©s).

.. image:: img/block/servo_increase_angle.png

Ce bloc augmente (ou diminue) l'angle du servo. La valeur peut √™tre n√©gative.

.. image:: img/block/servo_value.png

L'angle actuel du servo.

