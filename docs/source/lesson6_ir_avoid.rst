.. note::

    Bonjour et bienvenue dans la communaut√© SunFounder pour les passionn√©s de Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez dans l'univers du Raspberry Pi, d'Arduino et d'ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques gr√¢ce √† l'aide de notre communaut√© et de notre √©quipe.
    - **Apprenez et partagez** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Soyez parmi les premiers √† d√©couvrir les nouvelles annonces de produits et obtenez des avant-premi√®res.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos nouveaux produits.
    - **Promotions festives et cadeaux** : Participez √† des concours et promotions festives.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !


Le√ßon 6 : Explorer le Module d'√âvitement d'Obstacles
==============================================================

Plongeons dans le monde du module d'√©vitement d'obstacles √† infrarouge. Plac√©s sur les c√¥t√©s de notre rover martien, ces capteurs agissent comme les "yeux" du rover, l'aidant √† √©viter les obstacles lat√©raux et √† naviguer en toute s√©curit√© sur le paysage martien.

Nous allons apprendre √† int√©grer ces modules avec notre rover, d√©couvrir le fonctionnement qui se cache derri√®re leur magie, et d√©velopper du code pour permettre √† notre rover d'√©viter intelligemment tous les obstacles qu'il rencontre.

Pr√©parez-vous √† √©quiper notre rover d'une intelligence martienne capable de d√©jouer les obstacles ! En avant !

.. raw:: html

   <video width="600" loop autoplay muted>
      <source src="_static/video/car_ir1.mp4" type="video/mp4">
      Your browser does not support the video tag.
   </video>

.. note::

    Si vous suivez ce cours apr√®s avoir enti√®rement assembl√© le GalaxyRVR, vous devez d√©placer cet interrupteur vers la droite avant de t√©l√©verser le code.

    .. image:: img/camera_upload.png
        :width: 500
        :align: center

Objectifs d'apprentissage
---------------------------

* Comprendre le principe de fonctionnement et l'application du module d'√©vitement d'obstacles √† infrarouge.
* Apprendre √† utiliser Arduino pour contr√¥ler le module d'√©vitement d'obstacles √† infrarouge.
* S'exercer √† concevoir et construire un syst√®me d'√©vitement d'obstacles automatique bas√© sur l'infrarouge.


Mat√©riel n√©cessaire
----------------------

* Modules d'√©vitement d'obstacles
* Outils de base et accessoires (tournevis, vis, fils, etc.)
* Mod√®le de Rover martien (√©quip√© du syst√®me Rocker-Bogie, cartes principales, moteurs)
* C√¢ble USB
* IDE Arduino
* Ordinateur


√âtapes
---------

**√âtape 1 : Installer le Module d'√âvitement d'Obstacles**

Nous allons maintenant installer les deux modules d'√©vitement d'obstacles sur le rover.

.. raw:: html

    <iframe width="600" height="400" src="https://www.youtube.com/embed/UWEj_ROYAt0" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

Les √©tapes d'assemblage √©taient simples, n'est-ce pas ? Dans les prochaines √©tapes, nous allons d√©couvrir le principe de fonctionnement de ces modules et comment ils aident notre rover martien √† √©viter les obstacles. Restez √† l'√©coute !


**√âtape 2 : D√©mystifier le Module**

Voici le module d'√©vitement d'obstacles √† infrarouge - l'assistant intelligent de notre rover. Ce petit appareil est un concentr√© de technologies. Faisons un tour :

.. image:: img/ir_avoid.png
    :width: 300
    :align: center

Voici les d√©finitions des broches :

* **GND** : C'est comme l'ancre du module, le connectant √† la masse ou au point commun dans le circuit.
* **+** : C'est ici que le module re√ßoit son √©nergie, n√©cessitant une alimentation de 3,3 √† 5V DC.
* **Out** : C'est le communicateur du module. Par d√©faut, il reste en position haute et ne passe en basse que lorsqu'il d√©tecte un obstacle.
* **EN** : Voici le contr√¥leur du module. Cette broche d'**activation** d√©cide quand le module doit fonctionner. Par d√©faut, elle est connect√©e √† la masse (GND), ce qui signifie que le module est toujours en action.

Curieux de savoir comment fonctionne ce petit module ? C'est plut√¥t fascinant ! 
Il utilise une paire de composants infrarouges - un √©metteur et un r√©cepteur. 
L'√©metteur agit comme une lampe de poche du module, √©mettant de la lumi√®re infrarouge. 
Lorsque qu'un obstacle appara√Æt, la lumi√®re infrarouge rebondit et est capt√©e par le 
r√©cepteur. Le module envoie alors un signal bas, alertant notre rover de la pr√©sence d'un obstacle.

.. image:: img/ir_receive.png
    :align: center

Ce petit module est tr√®s performant, d√©tectant les obstacles dans un rayon de 2 √† 40 cm, et poss√®de d'excellentes capacit√©s anti-interf√©rences. 
Cependant, la couleur des objets influence sa d√©tection. Les objets plus sombres, en particulier les noirs, sont d√©tect√©s √† une distance plus courte. 
Face √† un mur blanc, le capteur est plus efficace, avec une d√©tection dans une plage de 2 √† 30 cm.

La broche **EN** en position basse active le module, avec le capuchon de cavalier reliant la broche **EN** √† la masse. Si vous souhaitez contr√¥ler la broche **EN** via le code, le cavalier doit √™tre retir√©.

.. image:: img/ir_cap.png
    :width: 400
    :align: center

Le module poss√®de deux potentiom√®tres, l'un pour ajuster la puissance d'√©mission et l'autre pour ajuster la fr√©quence d'√©mission. En ajustant ces deux potentiom√®tres, vous pouvez ajuster la distance de d√©tection.

.. image:: img/ir_avoid_pot.png
    :width: 400
    :align: center 

C'est tout pour notre petit module. Dans la prochaine √©tape, nous apprendrons comment l'int√©grer √† notre rover et le contr√¥ler √† l'aide d'Arduino. Restez avec nous !

**√âtape 3 : Lire les Donn√©es des 2 Modules**

Comme des explorateurs curieux, plongeons dans l'univers des codes et des capteurs !

#. Notre rover martien est √©quip√© de deux capteurs sp√©ciaux "Alien-Eye", fix√©s aux broches 7 (droite) et 8 (gauche). Ces capteurs sont en fait nos modules d'√©vitement d'obstacles √† infrarouge, toujours vigilants pour √©viter tout "rocher spatial" (obstacle) sur le parcours interstellaire de notre rover !

    .. image:: img/ir_shield.png

#. Ensuite, nous devons communiquer avec notre rover en utilisant le langage universel du code Arduino.

    Commen√ßons par donner un nom unique √† chaque ≈ìil du rover. Appelons-les ``IR_DROIT`` et ``IR_GAUCHE``, pour ne pas les confondre.

        .. code-block:: arduino

            #define IR_RIGHT 7
            #define IR_LEFT 8

    Ensuite, faisons savoir √† notre rover que ce sont ses yeux sp√©ciaux - ils transmettront des informations du monde ext√©rieur au cerveau √©lectronique du rover.

        .. code-block:: arduino

            pinMode(IR_RIGHT, INPUT);
            pinMode(IR_LEFT, INPUT);

    Pour nous assurer que notre rover partage ses d√©couvertes avec nous, nous √©tablissons une ligne de communication secr√®te, comme des espions dans un film de science-fiction. Cette prochaine ligne lance une conversation s√©rie √† la vitesse de 9600 bits par seconde - c'est une discussion ultra rapide !

        .. code-block:: arduino

            Serial.begin(9600);

    Maintenant, notre rover scanne ses environs avec ses "Alien-Eyes" et nous transmet ses d√©couvertes. S'il d√©tecte un obstacle, la valeur sera 0 ; si le chemin est d√©gag√©, la valeur sera 1. Il continue d'envoyer ces messages, nous tenant inform√©s.

        .. code-block:: arduino

            int rightValue = digitalRead(IR_RIGHT);
            int leftValue = digitalRead(IR_LEFT);
            Serial.print("Right IR: ");
            Serial.println(rightValue);
            Serial.print("Left IR: ");
            Serial.println(leftValue);

    Enfin, le rover marque une pause (environ 200 millisecondes) apr√®s chaque transmission. Cette petite pause nous donne le temps d'interpr√©ter le message du rover avant qu'il n'envoie un autre.

        .. code-block:: arduino

            delay(200);

    Voici le code complet :

    .. raw:: html
        
        <iframe src=https://create.arduino.cc/editor/sunfounder01/98546821-5f4b-42ae-bc9f-e7ec15544c8b/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>

#. Une fois votre code pr√™t, s√©lectionnez la bonne carte et le bon port, et t√©l√©chargez le code vers votre rover martien. Ensuite, ouvrez la ligne de communication secr√®te (le moniteur s√©rie) en cliquant sur son ic√¥ne en haut √† droite.

    .. image:: img/ir_open_serial.png

#. Avant de commencer √† recevoir les messages du rover, assurez-vous que votre ligne de communication est r√©gl√©e √† la m√™me vitesse (9600 bauds) que celle de votre rover. Et voil√† - des mises √† jour en direct de votre rover martien !

    .. image:: img/ir_serial.png

#. Pour tester notre syst√®me, agitez un "rocher spatial" (votre main) devant l'un des capteurs. Vous verrez la valeur passer √† 0, et la LED correspondante sur le module s'allume. Le rover dit alors : "Attention, rocher spatial √† droite !"

    .. code-block::

        Right IR: 0
        Left IR: 1
        Right IR: 0
        Left IR: 1
        Right IR: 0
        Left IR: 1

Vous avez maintenant non seulement parcouru l'espace, mais aussi d√©crypt√© le langage martien ! Nous avons h√¢te de d√©couvrir quels autres secrets interstellaires nous r√©v√©lera notre prochaine mission !

**√âtape 4 : Ajuster la Distance de D√©tection**

Nous arrivons √† une √©tape essentielle : ajuster les distances de d√©tection de nos capteurs en fonction de l'environnement. Les r√©glages d'usine peuvent ne pas √™tre optimaux.

Si la distance de d√©tection des deux modules infrarouges est trop courte, le rover pourrait percuter des obstacles. Si elle est trop longue, le rover pourrait commencer √† tourner alors qu'il est encore loin d'un obstacle, ce qui pourrait affecter son d√©placement.

Voici comment proc√©der aux ajustements :

#. Commencez par ajuster le module d'√©vitement d'obstacles droit. Lors du transport, des collisions peuvent provoquer l'inclinaison de l'√©metteur et du r√©cepteur du module infrarouge. Vous devez donc les redresser manuellement.

    .. raw:: html

        <video width="600" loop autoplay muted>
            <source src="_static/video/ir_adjust1.mp4" type="video/mp4">
            Your browser does not support the video tag.
        </video>

#. Placez un obstacle √† environ 20 cm devant le module droit. La bo√Æte dans laquelle se trouvait notre kit de rover est un bon choix ! Maintenant, tournez le potentiom√®tre sur le module jusqu'√† ce que le voyant sur le module s'allume juste. Ensuite, d√©placez l'obstacle d'avant en arri√®re pour v√©rifier si le voyant s'allume √† la distance souhait√©e. Si le voyant ne s'allume pas √† la bonne distance ou reste allum√© sans s'√©teindre, vous devrez ajuster l'autre potentiom√®tre.

    .. raw:: html

        <video width="600" loop autoplay muted>
            <source src="_static/video/ir_adjust2.mp4" type="video/mp4">
            Your browser does not support the video tag.
        </video>

#. R√©p√©tez le m√™me processus pour l'autre module.

Maintenant que nos capteurs sont pleinement op√©rationnels, passons √† la prochaine √©tape de notre voyage !

**√âtape 5 : Concevoir un Syst√®me d'√âvitement d'Obstacles Automatique**

Maintenant, faisons un grand bond dans notre exploration spatiale et utilisons les informations fournies par le rover. 
Nous allons cr√©er un syst√®me d'√©vitement d'obstacles automatique !

Voici notre plan : Si le capteur droit d√©tecte un obstacle, le rover tournera vers l'arri√®re droit. Si le capteur gauche d√©tecte un obstacle, le rover tournera vers l'arri√®re gauche. Si les deux capteurs d√©tectent un obstacle, le rover reculera. Si aucun obstacle n'est d√©tect√©, le rover continuera tout droit.

Visualisons cela dans un organigramme pour rendre tout cela encore plus clair. 
Les organigrammes sont un excellent moyen de structurer un plan de mani√®re logique, 
surtout en programmation !

.. image:: img/ir_flowchart.png

Chuchotons ce plan √† notre rover dans son langage (le code Arduino) :

.. raw:: html

    <iframe src=https://create.arduino.cc/editor/sunfounder01/af6539d4-7b4b-4e74-a04a-9fa069391d4d/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>

Dans ce code, nous utilisons l'instruction ``if...else`` dans la fonction ``loop()``.

    L'instruction ``if...else`` est utilis√©e pour ex√©cuter un bloc de code parmi deux alternatives. 
    Cependant, lorsque nous devons choisir parmi plus de deux alternatives, nous utilisons l'instruction ``if...else if...else``.

    La syntaxe de l'instruction ``if...else if...else`` est :

    .. code-block:: arduino

        if (condition1) {
        // code block 1
        }
        else if (condition2){
        // code block 2
        }
        else if (condition3){
        // code block 3
        }
        else {
        // code block 4
        }
    
    Here,

    * If condition1 is true, code block 1 is executed.
    * If condition1 is false, then condition2 is evaluated.
    * If condition2 is true, code block 2 is executed.
    * If condition2 is false, then condition3 is evaluated.
    * If condition3 is true, code block 3 is executed.
    * If condition3 is false, code block 4 is executed.

Maintenant que nous avons con√ßu notre syst√®me d'√©vitement d'obstacles automatique, passons √† la partie la plus excitante - le test en conditions r√©elles !

* Observez si le rover se d√©place comme vous l'avez pr√©vu.
* Ou placez-le dans diff√©rentes conditions d'√©clairage pour voir comment ses mouvements changent.

En int√©grant la science √† notre projet d'ing√©nierie, nous devenons des d√©tectives de l'espace, r√©solvant les myst√®res du comportement de notre rover. 
Il ne s'agit pas seulement de corriger des erreurs, mais d'optimiser la performance, en rendant notre rover aussi performant que possible ! Continuez votre excellent travail, d√©tectives de l'espace !


**√âtape 6 : R√©flexion et R√©sum√©**

Pendant la phase de test, vous avez peut-√™tre remarqu√© un comportement int√©ressant de notre rover martien : alors qu'il √©vite habilement les obstacles √† sa gauche et √† sa droite, il peut avoir des difficult√©s √† d√©tecter les petits obstacles situ√©s directement devant lui.

Comment pourrions-nous r√©soudre ce probl√®me ?

Restez √† l'√©coute pour la prochaine le√ßon, o√π nous continuerons √† explorer le monde fascinant du codage, des capteurs et de la d√©tection d'obstacles.

N'oubliez pas, chaque d√©fi est une opportunit√© d'apprentissage et d'innovation. Et alors que nous poursuivons notre voyage d'exploration spatiale, il y a encore tellement plus √† d√©couvrir et √† apprendre !
